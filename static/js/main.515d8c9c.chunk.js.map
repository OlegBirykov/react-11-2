{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","components/ServiceAdd.js","components/ServiceList.js","App.js","serviceWorker.js","reducers/serviceList.js","reducers/serviceAdd.js","store/index.js","index.js"],"names":["FETCH_SERVICES_REQUEST","FETCH_SERVICES_FAILURE","FETCH_SERVICES_SUCCESS","DELETE_SERVICE_REQUEST","DELETE_SERVICE_FAILURE","DELETE_SERVICE_SUCCESS","EDIT_SERVICE_REQUEST","EDIT_SERVICE_FAILURE","EDIT_SERVICE_SUCCESS","CHANGE_SERVICE_FIELD","ADD_SERVICE_REQUEST","ADD_SERVICE_FAILURE","ADD_SERVICE_SUCCESS","ADD_SERVICE_FINISH","deleteServiceRequest","id","type","payload","deleteServiceSuccess","addServiceFailure","addingError","fetchServices","dispatch","a","fetch","process","response","ok","Error","statusText","json","data","items","error","message","editService","item","loadingError","ServiceAdd","props","history","match","useSelector","state","serviceAdd","loading","adding","finish","useDispatch","useEffect","params","push","handleChange","evt","target","name","value","changeServiceField","className","onClick","viewBox","cx","cy","r","fill","onSubmit","preventDefault","service","trim","price","content","Math","trunc","isNaN","addServiceRequest","method","headers","body","JSON","stringify","addService","disabled","onChange","ServiceList","serviceList","deletingFinish","handleRemove","deleteService","map","o","deleting","isDeleted","App","path","component","to","Boolean","window","location","hostname","initialState","reducer","combineReducers","action","result","reduce","flag","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.515d8c9c.chunk.js","sourcesContent":["export const FETCH_SERVICES_REQUEST = 'FETCH_SERVICES_REQUEST';\nexport const FETCH_SERVICES_FAILURE = 'FETCH_SERVICES_FAILURE';\nexport const FETCH_SERVICES_SUCCESS = 'FETCH_SERVICES_SUCCESS';\n\nexport const DELETE_SERVICE_REQUEST = 'DELETE_SERVICE_REQUEST';\nexport const DELETE_SERVICE_FAILURE = 'DELETE_SERVICE_FAILURE';\nexport const DELETE_SERVICE_SUCCESS = 'DELETE_SERVICE_SUCCESS';\n\nexport const EDIT_SERVICE_REQUEST   = 'EDIT_SERVICE_REQUEST';\nexport const EDIT_SERVICE_FAILURE   = 'EDIT_SERVICE_FAILURE';\nexport const EDIT_SERVICE_SUCCESS   = 'EDIT_SERVICE_SUCCESS';\n\nexport const CHANGE_SERVICE_FIELD   = 'CHANGE_SERVICE_FIELD';\n\nexport const ADD_SERVICE_REQUEST    = 'ADD_SERVICE_REQUEST';\nexport const ADD_SERVICE_FAILURE    = 'ADD_SERVICE_FAILURE';\nexport const ADD_SERVICE_SUCCESS    = 'ADD_SERVICE_SUCCESS';\nexport const ADD_SERVICE_FINISH     = 'ADD_SERVICE_FINISH';\n","import {\n  FETCH_SERVICES_REQUEST,\n  FETCH_SERVICES_FAILURE,\n  FETCH_SERVICES_SUCCESS,\n  DELETE_SERVICE_REQUEST,\n  DELETE_SERVICE_FAILURE,\n  DELETE_SERVICE_SUCCESS,\n  EDIT_SERVICE_REQUEST,\n  EDIT_SERVICE_FAILURE,\n  EDIT_SERVICE_SUCCESS,\n  CHANGE_SERVICE_FIELD,\n  ADD_SERVICE_REQUEST,\n  ADD_SERVICE_FAILURE,\n  ADD_SERVICE_SUCCESS,\n  ADD_SERVICE_FINISH,\n} from './actionTypes';\n\nexport const fetchServicesRequest = () => ({\n  type: FETCH_SERVICES_REQUEST,\n});\n\nexport const fetchServicesFailure = error => ({\n  type: FETCH_SERVICES_FAILURE,\n  payload: {\n    error,\n  },\n});\n\nexport const fetchServicesSuccess = items => ({\n  type: FETCH_SERVICES_SUCCESS,\n  payload: {\n    items,\n  },\n});\n\nexport const deleteServiceRequest = id => ({\n  type: DELETE_SERVICE_REQUEST,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteServiceFailure = error => ({\n  type: DELETE_SERVICE_FAILURE,\n  payload: {\n    error,\n  },  \n});\n\nexport const deleteServiceSuccess = id => ({\n  type: DELETE_SERVICE_SUCCESS,\n  payload: {\n    id,\n  },\n});\n\nexport const editServiceRequest = () => ({\n  type: EDIT_SERVICE_REQUEST,\n});\n\nexport const editServiceFailure = loadingError => ({\n  type: EDIT_SERVICE_FAILURE,\n  payload: {\n    loadingError,\n  },  \n});\n\nexport const editServiceSuccess = item => ({\n  type: EDIT_SERVICE_SUCCESS,\n  payload: {\n    item,\n  },\n});\n\nexport const changeServiceField = (name, value) => ({\n  type: CHANGE_SERVICE_FIELD,\n  payload: {\n    name,\n    value,\n  },\n});\n\nexport const addServiceRequest = (name, price, content) => ({\n  type: ADD_SERVICE_REQUEST,\n  payload: {\n    name,\n    price,\n    content,\n  },\n})\n\nexport const addServiceFailure = addingError => ({\n  type: ADD_SERVICE_FAILURE,\n  payload: {\n    addingError,\n  },\n});\n\nexport const addServiceSuccess = () => ({\n  type: ADD_SERVICE_SUCCESS,\n});\n\nexport const addServiceFinish = () => ({\n  type: ADD_SERVICE_FINISH,\n});\n\nexport const fetchServices = () => async dispatch => {\n  dispatch(fetchServicesRequest());\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}`)\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    const data = await response.json();\n    dispatch(fetchServicesSuccess(data));\n  } catch (e) {\n    dispatch(fetchServicesFailure(e.message));\n  }\n}\n\nexport const deleteService = id => async dispatch => {\n  dispatch(deleteServiceRequest(id));\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/${id}`, {\n      method: 'DELETE',\n    })\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    dispatch(deleteServiceSuccess(id));\n  } catch (e) {\n    dispatch(deleteServiceFailure(e.message));\n  }\n}\n\nexport const editService = id => async dispatch => {\n  dispatch(editServiceRequest());\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/${id}`)\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    const data = await response.json();\n    dispatch(editServiceSuccess(data));\n  } catch (e) {\n    dispatch(editServiceFailure(e.message));\n  }\n}\n\nexport const addService = item => async dispatch => {\n  dispatch(addServiceRequest());\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(item),\n    })\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    dispatch(addServiceSuccess());\n  } catch (e) {\n    dispatch(addServiceFailure(e.message));\n  }\n  fetchServices(dispatch);\n}\n\n","import {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeServiceField, editService, addService, addServiceFailure, addServiceFinish } from '../actions/actionCreators';\n\nfunction ServiceAdd(props) {\n  const { history, match } = props;\n  const { item, loading, loadingError, adding, addingError, finish } = useSelector(state => state.serviceAdd);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(editService(match.params.id));\n  }, [dispatch, match.params.id]);\n\n  useEffect(() => {\n    if (finish) {\n      dispatch(addServiceFinish());\n      history.push(process.env.PUBLIC_URL + '/services');      \n    };\n  // eslint-disable-next-line\n  }, [finish]);\n\n  const handleError = () => {\n    dispatch(editService(match.params.id));\n  }\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    dispatch(changeServiceField(name, value));\n  };\n\n  const handleCancel = () => {\n    history.push(process.env.PUBLIC_URL + '/services');\n  }\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const service = {\n      id: item.id,\n      name: item.name.trim(),\n      price: typeof(item.price) === 'string' ? item.price.trim() : item.price,\n      content: item.content.trim(),\n    }\n\n    if (!service.name) {\n      dispatch(addServiceFailure('Поле \"Название\" не должно быть пустым'));\n      return;\n    }\n\n    if (!service.price) {\n      dispatch(addServiceFailure('В поле \"Стоимость\" должно быть целое положительное число без пробелов'));\n      return;\n    }\n\n    service.price = Math.trunc(+service.price);\n\n    if (isNaN(service.price) || service.price <= 0) {\n      dispatch(addServiceFailure('В поле \"Стоимость\" должно быть целое положительное число без пробелов'));\n      return;      \n    } \n\n    dispatch(addService(service));\n  }\n\n  if (loadingError) {\n    return (\n      <>\n        <p className=\"error\">{loadingError}</p>\n        <button className=\"error-button\" onClick={handleError}>Попробовать ещё раз</button>\n      </>\n    )\n  }\n\n  if (loading) {\n    return (\n      <svg className=\"spinner ServiceAdd-spinner\" viewBox=\"0 0 50 50\">\n        <circle className=\"spinner-circle ServiceAdd-spinner-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\"></circle>\n      </svg>\n    )\n  }\n\n  return (\n    <form className=\"ServiceAdd\" onSubmit={handleSubmit}>\n      <label>\n        Название\n        <input name='name' disabled={adding} onChange={handleChange} value={item.name} />\n      </label>\n      <label>\n        Стоимость\n        <input name='price' disabled={adding} onChange={handleChange} value={item.price} />\n      </label>\n      <label>\n        Описание\n        <input name='content' disabled={adding} onChange={handleChange} value={item.content} />\n      </label>\n      <div className=\"ServiceAdd-buttons\">\n        <button \n          className={adding ? 'ServiceAdd-button-cancel button-disabled' : 'ServiceAdd-button-cancel'} \n          onClick={handleCancel} \n          disabled={adding}>\n          Отмена\n        </button>\n        <button \n          className={adding ? 'ServiceAdd-button-save button-spinner' : 'ServiceAdd-button-save'} \n          type='submit' \n          disabled={adding}>\n          {adding ? 'С' : 'Сохранить'}\n          {adding &&\n            <svg className=\"spinner ServiceAdd-button-spinner\" viewBox=\"0 0 50 50\">\n              <circle className=\"spinner-circle ServiceAdd-button-spinner-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\"></circle>\n            </svg> \n          }\n        </button>\n      </div>\n      {addingError && <p className=\"ServiceAdd-error\">{addingError}</p>}\n    </form>\n  );\n}\n\nexport default ServiceAdd;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchServices, deleteService } from '../actions/actionCreators';\n\nfunction ServiceList(props) {\n  const { history } = props;\n  const { items, loading, error, deletingFinish } = useSelector(state => state.serviceList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchServices());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (deletingFinish) {\n      dispatch(fetchServices());\n    }\n  }, [dispatch, deletingFinish]);\n\n  const handleError = () => {\n    dispatch(fetchServices());\n  }\n\n  const handleEdit = id => {\n    history.push(process.env.PUBLIC_URL + '/services/' + id);\n  }\n\n  const handleRemove = id => {\n    dispatch(deleteService(id));\n  }\n\n  if (error) {\n    return (\n      <>\n        <p className=\"error\">{error}</p>\n        <button className=\"error-button\" onClick={handleError}>Попробовать ещё раз</button>\n      </>\n    )\n  }\n\n  if (loading) {\n    return (\n      <svg className=\"spinner ServiceList-spinner\" viewBox=\"0 0 50 50\">\n        <circle className=\"spinner-circle ServiceList-spinner-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\"></circle>\n      </svg>\n    )\n  }\n\n  return (\n    <ul className=\"ServiceList\">\n      {items.map(o => (\n        <li className=\"ServiceList-item\" key={o.id}>\n          <p className=\"ServiceList-text\">{`${o.name}: ${o.price} руб.`}</p>\n          {!(o.deleting || o.isDeleted) && <button className=\"ServiceList-button-edit\" onClick={() => handleEdit(o.id)}>&#x270E;</button>}\n          <button \n            className={o.deleting || o.isDeleted ? 'ServiceList-button-delete button-spinner' : 'ServiceList-button-delete'} \n            disabled={o.deleting || o.isDeleted}\n            onClick={() => handleRemove(o.id)}>\n            &#x2715;\n            {(o.deleting || o.isDeleted) &&\n              <svg className=\"spinner ServiceList-button-spinner\" viewBox=\"0 0 50 50\">\n                <circle className=\"spinner-circle ServiceList-button-spinner-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\"></circle>\n              </svg> \n            }\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ServiceList;\n","import { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport ServiceAdd from './components/ServiceAdd';\nimport ServiceList from './components/ServiceList';\n\nfunction App() { \n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path={process.env.PUBLIC_URL + '/services/:id([0-9]+)'} component={ServiceAdd} />\n          <Route path={process.env.PUBLIC_URL + '/services'} component={ServiceList} />\n          <Redirect to={process.env.PUBLIC_URL + '/services'} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  FETCH_SERVICES_REQUEST,\n  FETCH_SERVICES_FAILURE,\n  FETCH_SERVICES_SUCCESS,\n  DELETE_SERVICE_REQUEST,\n  DELETE_SERVICE_FAILURE,\n  DELETE_SERVICE_SUCCESS,\n} from '../actions/actionTypes'\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null,\n  deletingFinish: false,\n};\n\nexport default function serviceListReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_SERVICES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n        deletingFinish: false,\n      };\n\n    case FETCH_SERVICES_FAILURE:\n      {\n        const { error } = action.payload;\n        return {\n          ...state,\n          loading: false,\n          error,\n        };\n      }\n\n    case FETCH_SERVICES_SUCCESS:\n      {\n        const { items } = action.payload;\n        return {\n          ...state,\n          items,\n          loading: false,\n          error: null,\n        };\n      }\n\n    case DELETE_SERVICE_REQUEST:\n      {\n        const { id } = action.payload;\n        return {\n          ...state,\n          items: state.items.map(o => o.id === id ? { ...o, deleting: true } : o)\n        };\n      }\n\n    case DELETE_SERVICE_FAILURE:\n      {\n        const { error } = action.payload;\n        return {\n          ...state,\n          error,\n        };\n      }\n\n    case DELETE_SERVICE_SUCCESS:\n      {\n        const { id } = action.payload;\n        const result = {\n          ...state,\n          items: state.items.map(o => o.id === id ? { ...o, deleting: false, isDeleted: true } : o),\n        };\n        return {\n          ...result,\n          deletingFinish: result.items.reduce((flag, o) => flag && !o.deleting, true),\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n","import {\n  EDIT_SERVICE_REQUEST,\n  EDIT_SERVICE_FAILURE,\n  EDIT_SERVICE_SUCCESS,\n  CHANGE_SERVICE_FIELD,\n  ADD_SERVICE_REQUEST,\n  ADD_SERVICE_FAILURE,\n  ADD_SERVICE_SUCCESS,\n  ADD_SERVICE_FINISH,\n} from '../actions/actionTypes'\n\nconst initialState = {\n  item: { id: '', name: '', price: '', content: '' },\n  loading: false,\n  loadingError: null,\n  adding: false,\n  addingError: null,\n  finish: false,\n};\n\nexport default function serviceAddReducer(state = initialState, action) {\n  switch (action.type) {\n    case EDIT_SERVICE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        loadingError: null,\n        adding: false,\n        addingError: null,        \n      };\n\n    case EDIT_SERVICE_FAILURE:\n      const { loadingError } = action.payload;\n      return {\n        ...state,\n        loading: false,\n        loadingError,\n      };\n\n    case EDIT_SERVICE_SUCCESS:\n      const { item } = action.payload;\n      return {\n        ...state,\n        item,\n        loading: false,\n        loadingError: null,\n      };\n\n    case CHANGE_SERVICE_FIELD:\n      const { name, value } = action.payload;\n      return {\n        ...state,\n        item: {\n          ...state.item,\n          [name]: value,\n        }\n      };\n      \n    case ADD_SERVICE_REQUEST:\n      return {\n        ...state,\n        adding: true,\n        error: null,\n      };\n\n    case ADD_SERVICE_FAILURE:\n      const { addingError } = action.payload;\n      return {\n        ...state,\n        adding: false,\n        addingError,\n      };\n\n    case ADD_SERVICE_SUCCESS:\n      return {\n        ...state,\n        adding: false,\n        addingError: null,\n        finish: true,\n      };\n\n    case ADD_SERVICE_FINISH:\n      return { ...initialState };\n      \n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport serviceListReducer from '../reducers/serviceList';\nimport serviceAddReducer from '../reducers/serviceAdd';\nimport thunk from 'redux-thunk';\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  serviceAdd: serviceAddReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}